#+INCLUDE: theme/style.org
#+TITLE: CPP / C++ - Bookmarks 
#+DESCRIPTION: cpp c++ code examples, demonstrations, design pattern and integration.
#+STARTUP: content 

 - [[wiki:index][Index]]

* Libraries 
** C Libraries 

+ *libv* - "libv implements common data structures such as linked
  lists, dynamic arrays, binary trees, AVL-trees, maps, hashes,
  stacks, queues and others."
  + Summary: Library that provides common data structures missing in
    C standard library. 
  + Repository/Site: http://libv.sourceforge.net/

+ *tbox* - "TBOX is a glib-like cross-platform C library that is simple
  to use yet powerful in nature. The project focuses on making C
  development easier and provides many modules (.e.g stream,
  coroutine, regex, container, algorithm ...), so that any developer
  can quickly pick it up and enjoy the productivity boost when
  developing in C language." 
  + Site:       https://tboox.org
  + Repository: https://github.com/tboox/tbox

+ *Eina* (Enlightment Project) - "The Eina library is a library which
  implements an API for data types in an efficient way. It also
  provides some useful tools like opening shared libraries, error
  management, type conversion, time accounting and memory pools. This
  library is cross-platform and can be compiled and used on Linux,
  BSD, and Windows."
  + Site: https://www.enlightenment.org/_legacy_embed/eina_main.html

+ *GNU Scientific Library - GSL* - "The library provides a wide range
  of mathematical routines such as random number generators, special
  functions and least-squares fitting. There are over 1000 functions
  in total with an extensive test suite."
  + Site:
    + https://www.gnu.org/software/gsl/
  + Documentation:
    + https://www.gnu.org/software/gsl/doc/html/index.html
  + Repository:
** General Purpose Libraries 
 
+ [[http://www.boost.org/][Boost libraries]] - Peer reviewed libraries that can be regarded as
  STL extensions. Many of them eventually get into the C++ standard,
  for instance, C++17 std::file_system comes from Boost.FileSystem,
  std::variant from C++17 comes from Boost.Variant.

+ [[http://stxxl.org/][STLXX]] - Standard Template Library for Extra Large Data Sets
  + "The core of STXXL is an implementation of the C++ standard
    template library STL for external memory (out-of-core)
    computations, i. e., STXXL implements containers and algorithms
    that can process huge volumes of data that only fit on
    disks. While the closeness to the STL supports ease of use and
    compatibility with existing applications, another design priority
    is high performance."

+ [[http://www.stlsoft.org/][STLSOFT]] - "Robust, Lightweight, Cross-platform, Template
  Software. STLSoft is a collection of STL and standard library
  extensions, and facades over operating-system and 3rd-party APIs."

+ [[https://abseil.io/][Abseil]] (Google) - "Allows using new C++ standard features from
  C++14 and C++17 with compilers that does not support those standards".

+ [[http://pocoproject.org/][Poco Framework]]

+ [[https://github.com/bloomberg/bde][Bloomberg BDE]] - Basic Development Environment - a set of
  foundational C++ libraries used at Bloomberg.

+ [[https://github.com/facebook/folly][Folly]] - "Folly (acronymed loosely after Facebook Open Source
  Library) is a library of C++14 components designed with
  practicality and efficiency in mind. Folly contains a variety of
  core library components used extensively at Facebook. In
  particular, it's often a dependency of Facebook's other open source
  C++ efforts and place where those projects can share code."

+ [[https://fcppt.org/][FCppt]] - Freundlich's C++ toolkit - "Freundlich's C++ Toolkit
  (fcppt) is a collection of libraries that aim to improve general
  C++ code through better typing and functional programming."

+ [[http://duneroadrunner.github.io/SaferCPlusPlus/][SaferCPlusPlus]] - "SaferCPlusPlus” is essentially a collection of
  safe data types intended to facilitate memory and data race safe
  C++ programming. This library is intended to work with and be
  complimentary to the Core Guidelines lifetime checker over its
  various stages of development and availability. (Including
  situations where the lifetime checker is not available at all.)"

** Template Metaprogramming Helpers 

+ [[https://www.boost.org/doc/libs/1_63_0/libs/mpl/doc/index.html][Boost MPL]] - "The Boost.MPL library is a general-purpose, high-level
  C++ template metaprogramming framework of compile-time algorithms,
  sequences and metafunctions. It provides a conceptual foundation
  and an extensive set of powerful and coherent tools that make doing
  explict metaprogramming in C++ as easy and enjoyable as possible
  within the current language."

+ [[https://www.boost.org/doc/libs/1_61_0/libs/hana/doc/html/index.html][Boost Hana]] - "Hana is a header-only library for C++
  metaprogramming suited for computations on both types and
  values. The functionality it provides is a superset of what is
  provided by the well established Boost.MPL and Boost.Fusion
  libraries. By leveraging C++11/14 implementation techniques and
  idioms, Hana boasts faster compilation times and runtime
  performance on par or better than previous metaprogramming
  libraries, while noticeably increasing the level of expressiveness
  in the process. Hana is easy to extend in a ad-hoc manner and it
  provides out-of-the-box inter-operation with Boost.Fusion,
  Boost.MPL and the standard library." 

+ [[https://github.com/edouarda/brigand][Brigand]] - Brigand Meta-programming library (Lightweight alternative
  to Boost MPL) - "Brigand is a light-weight, fully functional,
  instant-compile time C++ 11 meta-programming library. Everything
  you were doing with Boost.MPL can be done with Brigand. And if
  that's not the case, open an issue!""

+ [[http://loki-lib.sourceforge.net/][Loki]] - Template library developed by Andrei Alexandrescu
  illustrating several generic programming design patterns.

+ [[https://github.com/Microsoft/GSL][GSL - Guidelines SUpport Library]] - "The Guidelines Support Library
  (GSL) contains functions and types that are suggested for use by
  the C++ Core Guidelines maintained by the Standard C++
  Foundation. This repo contains Microsoft's implementation of GSL." 

** Unit Test Frameworks 

+ *Googletest* - Google Testing and Mocking Framework [MOST USED]
  + https://github.com/google/googletest


+ *Catch2* - A modern, C++-native, header-only, test framework for
  unit-tests, TDD and BDD - using C++11, C++14, C++17 and later (or
  C++03 on the Catch1.x branch)
  + https://github.com/catchorg/Catch2

+ *Doctest* - "doctest is a new C++ testing framework but is by far the
  fastest both in compile times (by orders of magnitude) and runtime
  compared to other feature-rich alternatives. It brings the ability
  of compiled languages such as D / Rust / Nim to have tests written
  directly in the production code by providing a fast, transparent
  and flexible test runner with a clean interface." 
  + https://github.com/onqtam/doctest

+ *CppUTest* - "CppUTest unit testing and mocking framework for C/C++ -
  CppUTest is a C /C++ based unit xUnit test framework for unit
  testing and for test-driving your code. It is written in C++ but is
  used in C and C++ projects and frequently used in *embedded systems*
  but it works for any C/C++ project."
  + http://cpputest.github.com
  + https://github.com/cpputest/cpputest

** Concurrency, Parallelism and Async 

*Threading and Parallel Computing*

+ *POSIX Threads*  - Threading C-API defined by POSIX IEEE standard
  which is implemented by many Unix-like operating systems such as
  Linux, MacOSX, iOS, Android, BSD, QNX and so on. Note: This API is
  already encapsulated and wrapped by C++11 standard library. 
  + [[https://www.cs.cmu.edu/afs/cs/academic/class/15492-f07/www/pthreads.html][POSIX thread (pthread) libraries]]
  + [[https://computing.llnl.gov/tutorials/pthreads/][POSIX Threads Programming]]
  + [[http://www.cs.fsu.edu/~baker/realtime/restricted/notes/pthreads.html][POSIX Threads API]]

+ *Intel TBB - Threading Building Blocks* - "This application is a
  widely used C++ library for shared-memory parallel programming and
  heterogeneous computing (intra-node distributed memory
  programming). The library provides a wide range of features for
  parallel programming, including generic parallel algorithms,
  concurrent containers, a scalable memory allocator, work-stealing
  task scheduler, and low-level synchronization primitives. Threading
  Building Blocks (TBB) is a library only solution for task-based
  parallelism and does not require any special compiler support. It
  ports to multiple architectures including Intel® architectures,
  ARM*, and Power Architecture*."
  + Site: https://software.intel.com/en-us/intel-tbb
  + Repo: https://github.com/intel/tbb

+ *Intel Parallel-STL* - "Parallel STL is an implementation of the C++
  standard library algorithms with support for execution policies, as
  specified in ISO/IEC 14882:2017 standard, commonly called
  C++17. The implementation also supports the unsequenced execution
  policy specified in Parallelism TS version 2 and proposed for the
  next version of the C++ standard in the C++ working group paper
  P1001R1. Parallel STL offers a portable implementation of threaded
  and vectorized execution of standard C++ algorithms, optimized and
  validated for Intel(R) 64 processors. For sequential execution, it
  relies on an available implementation of the C++ standard
  library. The source code in this repository corresponds to the
  releases of Parallel STL with Intel(R) C++ Compiler or with
  Threading Building Blocks."
  + Site: https://software.intel.com/en-us/articles/get-started-with-parallel-stl
  + Site: https://github.com/intel/parallelstl

*Coroutines*

+ *Boost Coroutines 2* - "Boost.Coroutine2 provides templates for
  generalized subroutines which allow suspending and resuming
  execution at certain locations. It preserves the local state of
  execution and allows re-entering subroutines more than once (useful
  if state must be kept across function calls). Coroutines can be
  viewed as a language-level construct providing a special kind of
  control flow. In contrast to threads, which are pre-emptive,
  coroutine switches are cooperative (programmer controls when a
  switch will happen). The kernel is not involved in the coroutine
  switches."
  + https://www.boost.org/doc/libs/1_70_0/libs/coroutine2/doc/html/index.html

+ *Boost Fibers* [USER SPACE THREADS] - "Provides a framework for
  micro-/userland-threads (fibers) scheduled cooperatively. The API
  contains classes and functions to manage and synchronize fibers
  similar to boost.thread. A fiber is able to store the current
  execution state, including all registers and CPU flags, the
  instruction pointer, and the stack pointer and later restore this
  state. The idea is to have multiple execution paths running on a
  single thread using a sort of cooperative scheduling (threads are
  preemptively scheduled) - the running fiber decides explicitly when
  it yields to allow another fiber to run (context switching). A
  context switch between threads costs usually thousands of CPU
  cycles on x86 compared to a fiber switch with less than 100
  cycles. A fiber can only run on a single thread at any point in
  time. Boost.fiber requires C++11!"
  + Site: https://www.boost.org/doc/libs/1_67_0/libs/fiber/doc/html/index.html
  + Repo: https://github.com/boostorg/fiber

+ *Cppcoro* [EXPERIMENTAL] - "This library is an experimental library
  that is exploring the space of high-performance, scalable
  asynchronous programming abstractions that can be built on top of
  the C++ coroutines proposal. It has been open-sourced in the hope
  that others will find it useful and that the C++ community can
  provide feedback on it and ways to improve it. It requires a
  compiler that supports the coroutines TS." 
  + https://github.com/lewissbaker/cppcoro


*Fibers, Actor Model, CSP Communication Sequential Process*

+ *CAF* - C++ Actor Framework - "CAF is an open source C++11 actor
  model implementation featuring lightweight & fast actor
  implementations, pattern matching for messages, network transparent
  messaging, and more."
  + Site: https://actor-framework.org/
  + Repo: https://github.com/actor-framework/actor-framework
  + Doxygen: http://www.actor-framework.org/doc/

+ *SObjectizer* - "SObjectizer is one of a few cross-platform and
  OpenSource 'actor frameworks' or C++. But SObjectizer supports not
  only Actor Model, but also Publish-Subscribe Model and CSP-like
  channels. The goal of SObjectizer is significant simplification of
  development of concurrent and multithreaded applications in C++."
  + Repo: https://bitbucket.org/sobjectizerteam/sobjectizer/

+ *QP/C++* - "QP/C++™ (Quantum Platform in C++) is a lightweight
  Real-Time Embedded Framework (RTEF) for building modern, responsive
  and modular real-time embedded applications as systems of
  asynchronous event-driven active objects (actors). QP/C++" is a
  member of a larger family of real-time embedded frameworks (RTEFs)
  consisting of QP/C++, QP/C, and QP-nano frameworks, which are all
  strictly quality controlled, thoroughly documented, and available
  under dual licensing model."
  + Site: https://www.state-machine.com/qpcpp/
  + Repo: https://github.com/QuantumLeaps/qpcpp
  + License: GPL for open source, commerical for closed source.

+ *ProXC* [C Library] - "CSP-inspired concurrency library for modern
  C - This is a library for C which enables Communicating Sequential
  Processes (CSP) like structuring of your code. Programming
  languages such as Occam and XC utilizes and builds around this very
  paradigm, but sadly is hardware locked. Many good CSP libraries for
  general purpose programming languages has been made, including both
  for Java (JCSP) and C++ (C++CSP2), but not for C. There does exists
  plenty of libraries for C which implements many features from CSP,
  such as coroutines, channels, etc., but not all in a single
  library. ProXC aims to do this, and with no macro magic!"
  + Site: https://github.com/edvardsp/libproxc
** Language Binding 

+ [[https://pybind11.readthedocs.io/en/stable/][pybind11]] [BEST]
  + Brief: Allows to create Python modules in native code, aka
    libraries, with C++ >= C++11.

+ [[https://www.boost.org/doc/libs/1_69_0/libs/python/doc/html/tutorial/index.html][Boost.Python]]
  + Brief: "The Boost Python Library is a framework for interfacing
    Python and C++. It allows you to quickly and seamlessly expose
    C++ classes functions and objects to Python, and vice-versa,
    using no special tools -- just your C++ compiler. It is designed
    to wrap C++ interfaces non-intrusively, so that you should not
    have to change the C++ code at all in order to wrap it, making
    Boost.Python ideal for exposing 3rd-party libraries to
    Python. The library's use of advanced metaprogramming techniques
    simplifies its syntax for users, so that wrapping code takes on
    the look of a kind of declarative interface definition language
    (IDL)." 

** Numerical and General Scientifc Computing 
*** General Purpose

+ [[https://www.boost.org/doc/libs/1_70_0/libs/math/doc/html/overview.html][Boost Math toolkit]]
  + [[https://www.boost.org/doc/libs/1_70_0/libs/math/doc/html/dist.html][Chapter 5. Statistical Distributions and Functions]]
  + [[https://www.boost.org/doc/libs/1_70_0/libs/math/doc/html/interpolation.html][Interpolation]]
  + [[https://www.boost.org/doc/libs/1_70_0/libs/math/doc/html/quadrature.html][Quadrature and Differentiation]]

+ *GNU Scientific Library - GSL* (C-Library) - "The library provides a
  wide range of mathematical routines such as random number
  generators, special functions and least-squares fitting. There are
  over 1000 functions in total with an extensive test suite."
  + Site:
    + https://www.gnu.org/software/gsl/
  + Documentation:
    + https://www.gnu.org/software/gsl/doc/html/index.html
  + Repository:

+ *GLPK* - *GNU Linear Programming Kit* (C and Fortran Library) - "The GLPK (GNU Linear
  Programming Kit) package is intended for solving large-scale linear
  programming (LP), mixed integer programming (MIP), and other
  related problems. It is a set of routines written in ANSI C and
  organized in the form of a callable library."
  + Site: https://www.gnu.org/software/glpk/
  + Example:
    + https://en.wikibooks.org/wiki/GLPK/Using_the_GLPK_callable_library
  + GPLK for Windows: http://winglpk.sourceforge.net/

+ *NAG C Libraries* from Numerical Algorithm Group [COMMERCIAL] - "The
  world’s largest collection of robust, documented, tested and
  maintained numerical algorithms." 
  + Site: https://www.nag.co.uk/nag-c-library
  + [[https://www.nag.com/content/cplusplus-wrappers-nag-c-library][C++ Wrappers]]

+ *Intel MKL* - Intel Math Kernel Library - [FREWARE] (C and Fortran
  Library) - "Intel® Math Kernel Library (Intel® MKL) optimizes code
  with minimal effort for future generations of Intel® processors. It
  is compatible with your choice of compilers, languages, operating
  systems, and linking and threading models.". Note: only C shared
  and static libraries are provided, not the source code. 
  + Site: https://software.intel.com/en-us/mkl
  + License:
    + [[https://software.intel.com/en-us/license/intel-simplified-software-license][Intel Simplified Software License (Version April 2018)]]
    + [[https://software.intel.com/en-us/mkl/license-faq][FAQ]]
  + Documentation:
    + https://software.intel.com/en-us/mkl-developer-reference-c
  + Wikipedia:
    + https://en.wikipedia.org/wiki/Math_Kernel_Library
  + Github:
    + https://github.com/intel/mkl-dnn
     
+ *Ceres Solver* "Ceres Solver [1] is an open source C++ library for
  modeling and solving large, complicated optimization problems. It
  can be used to solve Non-linear Least Squares problems with bounds
  constraints and general unconstrained optimization problems. It is
  a mature, feature rich, and performant library that has been used
  in production at Google since 2010. For more, see Why?. "
  + Site: http://ceres-solver.org/
  + Docs: http://ceres-solver.org/tutorial.html
  + Repo: https://github.com/ceres-solver/ceres-solver

+ *ARB* - *C library for arbitrary-precision ball arithmetic*
  + "Arb is a C library for rigorous real and complex arithmetic with
    arbitrary precision. Arb tracks numerical errors automatically
    using ball arithmetic, a form of interval arithmetic based on a
    midpoint-radius representation. On top of this, Arb provides a
    wide range of mathematical functionality, including polynomials,
    power series, matrices, integration, root-finding, and many
    transcendental functions. Arb is designed with efficiency as a
    primary goal, and is usually competitive with or faster than
    other arbitrary-precision packages. The code is thread-safe,
    portable, and extensively tested. Arb is free software
    distributed under the GNU Lesser General Public License (LGPL),
    version 2.1 or later"
  + Site: http://arblib.org/
  + Repo: https://github.com/fredrik-johansson/arb/

+ *Trillinos* (Develped by Sandia National Laboratories) - "The
  Trilinos Project is an effort to develop algorithms and enabling
  technologies within an object-oriented software framework for the
  solution of large-scale, complex multi-physics engineering and
  scientific problems. A unique design feature of Trilinos is its
  focus on packages."
  + Site: https://trilinos.github.io/
  + Repo: https://github.com/trilinos/Trilinos
  + See:
    + https://en.wikipedia.org/wiki/Trilinos

+ *FFTW* - "FFTW is a C subroutine library for computing the discrete
  Fourier transform (DFT) in one or more dimensions, of arbitrary
  input size, and of both real and complex data (as well as of
  even/odd data, i.e. the discrete cosine/sine transforms or
  DCT/DST). We believe that FFTW, which is free software, should
  become the FFT library of choice for most applications." 
  + Site: http://www.fftw.org/

+ *Apophenia* - "Apophenia is an open statistical library for working
  with data sets and statistical models. It provides functions on the
  same level as those of the typical stats package (such as OLS,
  Probit, or singular value decomposition) but gives the user more
  flexibility to be creative in model-building. The core functions
  are written in C, but experience has shown them to be easy to bind
  to in Python/Julia/Perl/Ruby/&c. It is written to scale well, to
  comfortably work with gigabyte data sets, million-step simulations,
  or computationally-intensive agent-based models."
  + Site: http://apophenia.info/
  + Repo: https://github.com/b-k/apophenia

*** CAS - Computer Algebra System, Symbolic Manipulation and Formula Evaluation 

+ *TinyExpr* - tiny recursive descent expression parser, compiler, and
  evaluation engine for math expressions.
  + Site: https://codeplea.com/tinyexpr
  + Repo: https://github.com/codeplea/tinyexpr

+ *SymEngine* - SymEngine is a fast symbolic manipulation library,
  written in C++
  + Site: https://www.sympy.org/en/index.html
  + Repo: https://github.com/symengine/symengine

+ *GiNac* - "GiNaC is a C++ library. It is designed to allow the
  creation of integrated systems that embed symbolic manipulations
  together with more established areas of computer science (like
  computation- intense numeric applications, graphical interfaces,
  etc.) under one roof. It is distributed under the terms and
  conditions of the GNU general public license (GPL). GiNaC is an
  iterated and recursive acronym for GiNaC is Not a CAS, where CAS
  stands for Computer Algebra System." 
  + Site: https://ginac.de/

+ *FORM* - The FORM project for symbolic manipulation of very big
  expressions.
  + Site: https://www.nikhef.nl/~form/aboutform/aboutform.html
  + Repository: https://github.com/vermaseren/form

+ *Exprtk* (Formula parser and evaluator) - "The C++ Mathematical
  Expression Toolkit Library (ExprTk) is a simple to use, easy to
  integrate and extremely efficient run-time mathematical expression
  parser and evaluation engine. ExprTk supports numerous forms of
  functional, logical and vector processing semantics and is very
  easily extendible."
  + Site: http://www.partow.net/programming/exprtk/
  + Repo: https://github.com/ArashPartow/exprtk

*** Linear Algebra

+ [[https://www.boost.org/doc/libs/1_69_0/libs/numeric/ublas/doc/index.html][Boost.Ublas]] - "uBLAS is a C++ template class library that provides
  BLAS level 1, 2, 3 functionality for dense, packed and sparse
  matrices. The design and implementation unify mathematical notation
  via operator overloading and efficient code generation via
  expression templates." 

+ [[http://eigen.tuxfamily.org/index.php?title=Main_Page#Documentation][Eigen]] - "Eigen is a C++ template library for linear algebra:
  matrices, vectors, numerical solvers, and related algorithms."

+ [[http://arma.sourceforge.net/][Armadillo]] - "C++ library for linear algebra & scientific computing"

+ [[https://sourceforge.net/projects/blitz/][Blitz++]] - "Blitz++ is a C++ class library for scientific computing
  which provides performance on par with Fortran 77/90. It uses
  template techniques to achieve high performance. Blitz++ provides
  dense arrays and vectors, random number generators, and small
  vectors (useful for representing multicomponent or vector fields)."

+ [[https://bitbucket.org/blaze-lib/blaze][Blaze]] - "Blaze is an open-source, high-performance C++ math library
  for dense and sparse arithmetic. With its state-of-the-art Smart
  Expression Template implementation Blaze combines the elegance and
  ease of use of a domain-specific language with HPC-grade
  performance, making it one of the most intuitive and fastest C++
  math libraries available."

+ [[https://github.com/wichtounet/etl][ETL]] - Expression Templates Library (ETL) with GPU support

+ [[https://sleef.org/][SLEEF]] - SLEEF Vectorized Math Library - " SLEEF stands for SIMD
  Library for Evaluating Elementary Functions. It implements
  vectorized versions of all C99 real floating point math
  functions. It can utilize SIMD instructions of modern
  processors. SLEEF is designed to fully utilize SIMD computation by
  reducing the use of conditional branches and scatter/gather memory
  access. Our benchmarks show that the performance of SLEEF is
  comparable to that of the best commercial library. Unlike
  vendor-tuned libraries, SLEEF is portable : it can be easily ported
  to other architectures by writing a helper file, which is a thin
  abstraction layer of SIMD intrinsics. SLEEF is also designed to
  work with various operating systems and compilers." 
  + https://github.com/shibatch/sleef
*** Optimization

+ [[https://www.kthohr.com/optimlib.html][Optmlib]] - "OptimLib is a lightweight C++ library of numerical
  optimization methods for nonlinear functions."
  + https://github.com/kthohr/optim
*** Finite Element Methods 
 
+ *getfem* - "GetFEM++ is an open source library based on collaborative
  development. It aims to offer the most flexible framework for
  solving potentially coupled systems of linear and nonlinear partial
  differential equations with the finite element method. GetFEM++ is
  interfaced with some script languages (Python, Scilab and Matlab)
  so that almost all of the functionalities can be used just writing
  scripts. It works in arbitrary dimension and allow to couple 1D, 2D
  and 3D problems. GetFEM++ can be used to construct very generic
  finite element codes, where finite element methods, integration
  methods and the dimension of the problem are the parameters that
  can be changed very easily. This allows a wide range of
  experiments. Many examples and demos are provided." 
  + Site: http://getfem.org/

+ *MFem* - MFEM is a free, lightweight, scalable C++ library for finite
  element methods.
  + Features
    + Arbitrary high-order finite element meshes and spaces.
    + Wide variety of finite element discretization approaches.
    + Scalable to hundreds of thousands of cores.
  + Site: https://mfem.org/
  + Repo: https://github.com/mfem/mfem

+ *OFELI* - An Object Oriented Finite Element Library
  + "Based on a long experience in the development of finite element
    software, OFELI (Object Finite Element LIbrary) is a framework of
    C++ classes for the development of finite element programs. Its
    main features are:"
    + Various storage schemes of matrices (dense, sparse, skyline).
    + Direct methods of solution of linear systems of equations as well
      as various combinations of iterative solvers and
      preconditioners. 
    + Shape functions of most "popular" finite elements
    + Numerical solution of eigenvalue problems
    + Classes for the solution of most popular problems (Heat
      Transfer, Fluid Flow, Solid Mechanics, Electromagnetics, ...).
  + Site: http://www.ofeli.org/
** Domain Specific Scientific and Engineering Libraries 

 * [[https://root.cern.ch/doc/v606/dir_90274118d43186b3dd199f7d2c0e1afe.html][CERN's Root Framework]] (Domain: High Energy Physics)
   + Description: ROOT Framework comprises the Cling C++ interactive
     interpreter; C++ reflection system (reflex); special mathematical
     functions ; plotting tools and GUI.
   + [[http://alicematters.web.cern.ch/?q=content/node/1053][40 Years of Large Scale Data Analysis in HEP: Interview with René Brun | ALICE Matters]]
   + 

 * [[https://cpp.openfoam.org/v6/index.html][OpenFoam]] (Domain: Physics, Mechanical Engineering and Chemical Engineering)
   * Open Source C++ library for CFD (Computational Fluid
     Dynamics) with toolboxes for fluid dynamics, chemical reactions,
     turbulence, heat transfer and so on.
   * More at: https://en.wikipedia.org/wiki/OpenFOAM
   * Doxygen Configuration:
     * https://github.com/OpenFOAM/OpenFOAM-6/tree/master/doc

 * [[http://mechsys.nongnu.org/][Mechsys]] - Multi-physics Simulation Library (Domain: Physics,
   Mechanical and Chemical Engineering) - "MechSys is aprogramming
   library for the implementation of simulation tools in
   mechanics. Its source code is mainly written in C++ with easier to
   use templates for further customization. Potential applications
   include, for instance, *solid mechanics* and the *dynamics of granular*
   materials using the *discrete element method*, and both computational
   *fluid dynamics* and *computational electromagnetics* using the *lattice*
   *Boltzmann method.*"

 * [[http://www.palabos.org/][Palabos]] - [[http://www.palabos.org/documentation/develguide/index.html][Doxygen]] (Domain: Physics, Mechanical/Chemical Engineering CFD)
   * Library for CFD - Computational Fluid Dynamics based on the
     lattice Boltzmann method. 

 * [[http://cantera.github.io/docs/sphinx/html/index.html][Cantera]] - [[http://web.mit.edu/2.62/cantera/doc/html/namespaceCantera.html][Doxygen]] (Domain: Chemical Engineering, Thermodynamics and Transport Processes)
   * "Cantera is an open-source suite of object-oriented software
     tools for problems involving chemical kinetics, thermodynamics,
     and/or transport processes. The software automates the chemical
     kinetic, thermodynamic, and transport calculations so that the
     users can efficiently incorporate detailed chemical
     thermo-kinetics and transport models into their calculations. The
     code utilizes object-oriented concepts for robust yet flexible
     phase models, and algorithms are generalized so that users can
     explore different phase models with minimal changes to their
     overall code. Currently, Cantera can be used from Python and
     Matlab, or in applications written in C/C++ and
     Fortran 90. Cantera also provides a limited number of solvers for
     time-dependent reactor networks and steady one-dimensional
     reacting flows. Cantera is currently used for applications
     including combustion, detonations, electrochemical energy
     conversion and storage, fuel cells, batteries, aqueous
     electrolyte solutions, plasmas, and thin film deposition."

 * [[https://libantioch.github.io/][Antioch]] - C++ Chemical Kinetics, Thermodynaimics, and Transport
   Library - "A New Templated Implementation Of Chemistry for
   Hydrodynamics (Antioch) was initiated to centralize work by some of
   the Antioch authors within the realm of hypersonic aerodynamics,
   based on the libMesh finite element library. In particular,
   although there exist C++ chemistry libraries, such as Cantera, we
   had needs for both thread-safety and high performance. Thus,
   Antioch was born. Antioch originally lived within the PECOS center
   at the Institute for Computational Engineering and Sciences (ICES)
   at The University of Texas at Austin." 
   * Repo: https://github.com/libantioch/antioch
   * [[https://libantioch.github.io/antioch/v0.4.0/html/namespaces.html][Doxygen docs]]

 * [[https://github.com/CoolProp/IF97][CoolProp/IF97]] - (Domain: Mechanical and Chemical Engineering) -
   Open-source C++ implementation of the IAPWS-IF97 equations - IAPWS
   Industrial Formulation 1997 for the Thermodynamic Properties of
   Water and Steam. Note: software for computing water and steam
   thermodynamic properties (Steam tables). 

 * [[https://www.roboticslibrary.org/][Robotics Library]] - [[http://doc.roboticslibrary.org/0.7.0/index.html][Doxygen]] (Domain: Robotics Kinematics, Mechanical Engineering)
   * "The Robotics Library (RL) is a self-contained C++ library for
     robot kinematics, motion planning and control. It covers
     mathematics, kinematics and dynamics, hardware abstraction,
     motion planning, collision detection, and visualization. It is
     being used by several research projects (e.g., JAHIR, JAMES,
     JAST, SMErobotics) and in education, available under a BSD
     license, and free for use in commercial applications."

 * [[https://www.groundai.com/project/the-control-toolbox-an-open-source-c-library-for-robotics-optimal-and-model-predictive-control/][Control Toolbox]] - [[https://adrlab.bitbucket.io/ct/v2.3/ct_doc/doc/html/index.html][Doxygen]] (Domain: Robotics, Control Systems, Mechanical Engineering)
   * "This is the ADRL Control Toolbox ('CT'), an open-source C++
     library for efficient modelling, control, estimation, trajectory
     optimization and model predictive control. The CT is applicable
     to a broad class of dynamic systems, but features additional
     modelling tools specially designed for robotics. This page
     outlines its general concept, its major building blocks and
     highlights selected application examples. The library contains
     several tools to design and evaluate controllers, model dynamical
     systems and solve optimal control problems."

 * [[https://drake.mit.edu/][Drake]] - [[https://drake.mit.edu/doxygen_cxx/index.html#://][Doxygen]] Collection of C++ tools for analysing Robot dynamics and
   building motion control systems.
   * "While there are an increasing number of simulation tools
     available for robotics, most of them function like a black box:
     commands go in, sensors come out. Drake aims to simulate even
     very complex dynamics of robots (e.g. including friction,
     contact, aerodynamics, …), but always with an emphasis on
     exposing the structure in the governing equations (sparsity,
     analytical gradients, polynomial structure, uncertainty
     quantification, …) and making this information available for
     advanced planning, control, and analysis algorithms. Drake
     provides interfaces to high-level languages (MATLAB, Python, …)
     to enable rapid-prototyping of new algorithms, and also aims to
     provide solid open-source implementations for many
     state-of-the-art algorithms. Finally, we hope Drake provides many
     compelling examples that can help people get started and provide
     much needed benchmarks. We are excited to accept user
     contributions to improve the coverage."

 * [[http://jsbsim.sourceforge.net/][JBSim]] - [[https://jsbsim-team.github.io/jsbsim/index.html#intro][Doxygen]] (Domain: Aerospace/Mechanical Engineering)
   * An open source, platform-independent, flight dynamics & control
     software library in C++
   * "JSBSim is an open source flight dynamics model (FDM) that
     compiles and runs under many operating systems, including
     Microsoft Windows, Apple Macintosh, Linux, IRIX, Cygwin (Unix on
     Windows), etc. The FDM is essentially the physics/math model that
     defines the movement of an aircraft, rocket, etc., under the
     forces and moments applied to it using the various control
     mechanisms and from the forces of nature. JSBSim has no native
     graphics. It can be run by itself as a standalone program, taking
     input from a script file and various vehicle configuration
     files. It can also be incorporated into a larger flight simulator
     implementation that includes a visual system."

 * [[https://simtk.org/][simtk]] - [[https://simtk.org/api_docs/opensim/api_docs/index.html][Doxygen]] (Domain: Biomedical research.)

 * [[https://libpf.com/docs/manuals/sdk.html][LIBPF]] - Flexible Process Flowsheeting [Commercial] => Library for
   modelling continous processes. (Chemical Engineering)
   + "LIBPF™: (LIBrary for Process Flowsheeting), library developed in
     C++ language, which includes objects well-known to a process
     engineer (dimensional quantities, material streams, reactions,
     phase separators, heat exchangers, reactors, etc.). This library
     make possible the creation of executable applications specific
     for a particular continuous industrial process. It is oriented to
     a system modeling and not for detailed single unit operation
     modeling." 

 * [[http://kalman.sourceforge.net/][KFilter]] -  KFilter - Free C++ Extended Kalman Filter Library
   * "KFilter is a library implementing an Extended Kalman Filter in
     C++. Configurable template classes are available. Subclassing
     allows to define different matrix contents for the filter to work
     with. Kalman filters are used for some time now, in aeronautics,
     robot vision and robotics in general. It is useful to estimate a
     state vector and correct the estimation by using measures taken
     from sensors. Its main uses is for tracking or data fusion. The
     library is fully operational and has been used in two research
     projects at Ecole Polytechnique de Montreal."

 * [[http://web.mit.edu/drela/Public/web/avl/][AVL]] - "AVL is a program for the aerodynamic and flight-dynamic
   analysis of rigid aircraft of arbitrary configuration. It employs
   an extended vortex lattice model for  the lifting surfaces,
   together with a slender-body model for fuselages and nacelles.
   General nonlinear flight states can be specified. The flight
   dynamic analysis  combines a full linearization of the aerodynamic
   model about any flight state,  together with specified mass
   properties."
   * Note: NOT A LIBRARY, it is an open source program written in C.
   * Video: [[https://www.youtube.com/watch?v=kS9iPD5irIo][Introduction to Aerodynamic Analysis using AVL]]
   * Related Repositories:
     + https://github.com/renoelmendorp/AVLWrapper
     + https://github.com/RobotLocomotion/avl (Fork of Mark Drela's
       AVL software (http://raphael.mit.edu/avl) which builds using
       cmake.)

 * [[http://fdtd.kintechlab.com/en/start][EMTL]] - *Electromagnetic Template Library* (Domain: Electronic
   Engineering and Physics) - is a С++ library forprogramming
   Finite-Difference Time-Domain (FDTD) simulations.
   * "The program is designed for quick and efficient programming of
     FDTD simulations and for extending the available FDTD algorithms
     with new techniques and features. The code implements fully
     functional API including MPI parallelization."
   * Capabilities
     * Calculation of the distribution of electromagnetic fields in a structure;
     * Real-time simulation of the propagation of electromagnetic wave packet through a structure;
     * Calculation of the transmission, reflection, and absorption
       coefficients as functions of incident wavelength and angle for
       periodic structures;
     * Calculation of the scattering cross-section and the angle
       distribution of the scattered wave for objects of arbitrary
       shape;
     * Sensitivity analysis of the impact of defects on the optical
       properties of periodic structures (photonic crystals);
     * Calculation of transfer-matrix (T-matrix) for planar layers of
       arbitrarily shaped scatterers;

   * [[https://github.com/tmolteno/necpp][NECPP]] - Antenna Modelling Library -  rewrite of the Numerical
     Electromagnetics Code (NEC-2) 
     * "NEC2++ is a C++ rewrite of the Numerical Electromagnetics Code
       (NEC-2) with many new features like automatic error detection
       when you specify the structure incorrectly and much faster
       execution. Nec2++ can analyse radiating as well as scattering
       properties of structures. The simulation engine in Nec2++ is
       compiled into a library for easy integration."
     * See:
       * http://elec.otago.ac.nz/w/index.php/Necpp
       * [[https://en.wikipedia.org/wiki/Numerical_Electromagnetics_Code][Numerical Electromagnetics Code]]
       * https://www.nec2.org/

   * [[https://github.com/gnuradio/gnuradio][GNU Radio]] - "GNU Radio is a free & open-source software
     development toolkit that provides signal processing blocks to
     implement software radios. It can be used with readily-available,
     low-cost external RF hardware to create software-defined radios,
     or without hardware in a simulation-like environment. It is
     widely used in hobbyist, academic, and commercial environments to
     support both wireless communications research and real-world
     radio systems."
     * Site: https://www.gnuradio.org/
     * Repo: https://github.com/gnuradio/gnuradio

   * [[https://github.com/kit-cel/gr-radar][gr-radio]] - *GNU Radio Radar Toolbox*
     * Site: https://grradar.wordpress.com/
     * Repo: https://github.com/kit-cel/gr-radar
     * See:
       * [[https://www.rochesterham.org/meetings/2015-12_SDR_Program.pdf][Exploring RF with Software Defined Radio]]
       * [[https://www.youtube.com/watch?v=WeGSCGN8DIo][gr-radar: GUI Demonstration with FSK Radar]]

   * [[https://github.com/hmatuschek/libsdr][LIBSDR]] - A simple software defined radio (SDR) library
     * Doxygen: https://hmatuschek.github.io/libsdr/

 

** Machine Learning and Computer Vision

 + [[https://docs.opencv.org/3.4/d4/db1/tutorial_documentation.html][OpenCV]] - Computer Vision / Machine Learning - The most well-known
   computer vision and image processing library. 
   * Repo: https://github.com/opencv/opencv

 + [[http://dlib.net/][Dlib]] - Open source library for deep learning, numerical algorithms,
   networks and image processing.

 + [[http://torch.ch/][Torch]] - "Torch is a scientific computing framework with wide support
   for machine learning algorithms that puts GPUs first. It is easy to
   use and efficient, thanks to an easy and fast scripting language,
   LuaJIT, and an underlying C/CUDA implementation."
   + Repo: https://github.com/torch/torch7

 + [[http://www.csie.ntu.edu.tw/~cjlin/liblinear/][liblinear]]

 + [[http://mlpack.org/][Mlpack]] - Machine Learning Package 

 + [[http://shogun-toolbox.org/][Shogun Toolbox]] - "Shogun is and open-source machine learning
   library that offers a wide range of efficient and unified machine
   learning methods." 

 + [[http://leenissen.dk/fann/wp/][Fann]] - "Fast Artificial Neural Network Library is a free open
   source neural network library, which implements multilayer
   artificial neural networks in C with support for both fully
   connected and sparsely connected networks. Cross-platform execution
   in both fixed and floating point are supported. It includes a
   framework for easy handling of training data sets. It is easy to
   use, versatile, well documented, and fast. Bindings to more than 20
   programming languages are available. An easy to read introduction
   article and a reference manual accompanies the library with
   examples and recommendations on how to use the library. Several
   graphical user interfaces are also available for the library."

** FFI - Foreign Function Interface 

+ [[http://www.dyncall.org/index][dyncall.org - calling C functions dynamically]]
  + "The dyncall library encapsulates architecture-, OS- and
    compiler-specific function call semantics in a virtual bind
    argument parameters from left to right and then call interface
    allowing programmers to call C functions in a completely dynamic
    manner. In other words, instead of calling a function directly,
    the dyncall library provides a mechanism to push the function
    parameters manually and to issue the call afterwards." 

+ [[https://www.gnu.org/software/libffcall/][libffcall - GNU Project - Free Software Foundation]]

** XML 

+ [[http://rapidxml.sourceforge.net/][RapidXML]]

+ [[http://xmlsoft.org/][Libxml2]]

+ [[http://xerces.apache.org/xerces-c/][Xerces C++]]

+ [[http://pugixml.org/][Pugixml]]

+ [[http://www.grinninglizard.com/tinyxml/][TinyXML]]
** REPL - Command Line Interface - Terminal 

+ replxx - "A readline and libedit replacement that supports UTF-8,
  syntax highlighting, hints and Windows and is BSD licensed." 
  + repo: https://github.com/AmokHuginnsson/replxx

+ cli - "A library for interactive command line interface in modern C++"
  + repo: https://github.com/daniele77/cli

** Spreadsheet 

+ [[http://xlw.sourceforge.net/][XLW]] - Wrapper for Excel native extension C-API (XLL) which allows to make
  Excel extensions in C++.
  + Fork of XLW for using with CMake: [[https://github.com/caiorss/xlw-cmake-fork][xlw-cmake-fork]]

+ [[http://keyvalue.sourceforge.net/][KeyValue]] (C++ Wrapper for Excel native extension C-API XLL and Libreoffice Calc)
  + "KeyValue is a cross-platform library for making C++ objects
    accessible through LibreOffice Calc, Excel and other
    front-ends. Experience of spreadsheet users is enhanced by an
    object model and a handy key-value based interface. Actually,
    KeyValue does more than just help creating spreadsheet
    functions. The object model allows end-users to build C++ objects
    through the front-ends. These objects are stored in a repository
    for latter use at user's request. Additionally, KeyValue provides
    a set of services for an effective use of these objects. The
    library is named after one of its main features: The key-value
    based interface. Parameters are passed to functions (or, more
    precisely, processors) through key-value pairs in contrast to the
    standard positional interfaces of LibreOffice Calc, Excel, C/C++,
    etc."
  + Features:
    + Cross platform: Compilable by GCC for GNU/Linux and MSVC for Windows.
    + Front-ends: LibreOffice Calc (GNU/Linux and Windows) and Excel
      2007 add-ins are provided. (XML parser planned.)
    + Flexibility: KeyValue does not impose strong constraints on the
      design of libraries it is supposed to help. Therefore, existing
      libraries can use KeyValue without big code refactoring.
    + Loggers: Results, errors and general information can be reported
      in different types of loggers including consoles and files. 

+ [[https://github.com/tfussell/xlnt][XLNT]] - "Cross-platform user-friendly xlsx library for C++14 - xlnt
  is a modern C++ library for manipulating spreadsheets in memory and
  reading/writing them from/to XLSX files as described in ECMA 376
  4th edition. The first public release of xlnt version 1.0 was on
  May 10th, 2017. Current work is focused on increasing
  compatibility, improving performance, and brainstorming future
  development goals. For a high-level summary of what you can do with
  this library, see the feature list. Contributions are welcome in
  the form of pull requests or discussions on the repository's Issues
  page."

+ [[https://github.com/pyxll/xlfparser][Xlfparser]] - "Header only C++ library for tokenizing Excel formulas"

** GUI - Graphical User Interface 

+ [[https://www.qt.io/][QT Toolkit]] (QT Framework) - Not only a GUI toolkit, but also a
  full-fledge C++ framework with cross platform libraries for
  network, sockets, database access ... and so on.

+ [[http://www.wxwidgets.org/][WxWidgets]] 

+ [[http://www.gtkmm.org/][Gtkmm]] - Gtk (Written in C) + C++ interface
  + GTK is a GUI library derived from GIMP toolkit.
  + Drawback: Hard to use on Windows.

+ [[http://cegui.org.uk/][Cegui]] - Crazy Eddie's GUI System.

+ [[http://www.fltk.org/][Fltk]] - lightweight GUI library.

+ [[http://nanapro.org/en-us/][Nana]]

+ [[https://www.gnu.org/software/ncurses/][Ncurses]] - A (TUI) terminal user interface written in C. Provides
  many terminal widgets.

+ [[https://bitbucket.org/chromiumembedded/cef][CEF]] - Chromium Embedded Framework - "The Chromium Embedded
  Framework (CEF) is a simple framework for embedding Chromium-based
  browsers in other applications." 

+ [[https://sourceforge.net/projects/owlnext/][OWLNext C++ GUI]] [WINDOWS ONLY] - "An extensive update of Borland's Object Windows
  Library (OWL) for writing GUI applications in standard C++ on
  Microsoft Windows." 

+ [[https://juce.com/][Juce]]  [COMMERCIAL]

+ [[https://github.com/ocornut/imgui][Imgui]] - GUI Library for games

** GUI - Plotting Libraries and data visualization 

+ [[https://qwt.sourceforge.io/][Qwt]] (QT Framework Widgets) - Qt Widgets for Technical Applications*
  + License: LGPL

+ [[http://qwtplot3d.sourceforge.net/][Qwtplot3d]] - "QwtPlot3D is not a  program, but a feature-rich
  Qt/OpenGL-based C++ programming library, providing essentially a
  bunch of 3D-widgets for programmers. The library is zlib licensed."

+ [[http://cneben.github.io/QuickQanava/index.html][QuickQanava]] - "QuickQanava is a C++14 library designed to display
  graphs and relational content in a QtQuick application. QuickQanava
  provide QML components and C++ classes to visualize medium-sized
  directed graphs in a C++/QML application. QuickQanava does not
  provide advanced layout algorithms, but rather focus on displaying
  relational content in advanced dynamic user interfaces (with DnD
  support, resizable content, visual connection of nodes)."

+ [[https://www.gnu.org/software/plotutils/][GNU Plotutils]] - " The GNU plotutils package contains software for
  both programmers and technical users. Its centerpiece is libplot, a
  powerful C/C++ function library for exporting 2-D vector graphics
  in many file formats, both vector and bitmap. On the X Window
  System, it can also do 2-D vector graphics animations." 

+ [[http://www.openscenegraph.org/][OpenSceneGraph]] - "The OpenSceneGraph is an open source high
  performance 3D graphics toolkit, used by application developers in
  fields such as visual simulation, games, virtual reality,
  scientific visualization and modelling. Written entirely in
  Standard C++ and OpenGL it runs on all Windows platforms, OSX,
  GNU/Linux, IRIX, Solaris, HP-Ux, AIX and FreeBSD operating
  systems. The OpenSceneGraph is now well established as the world
  leading scene graph technology, used widely in the vis-sim, space,
  scientific, oil-gas, games and virtual reality industries." 

** GUI RAD - Rapid Application Development 

RAD Frameworks are a combination of library, IDE and GUI builder where
it is possible to build GUI applications by dragging and dropping user
interface elements in the and combining components in the same fashion
as Visual Basic or Delphi.

 + *Visual Studio* + Windows MFC (Microsft Foundation Classes) - Note:
   Windows only. 

 + *QT Creator* + QT Widgets or QTQuick/QML  - Note: QT Creator has a
   user interface designer.

 + [[https://www.ultimatepp.org/][Ultimate++]] - Ultimate++ is a C++ cross-platform rapid application
   development framework. 
   + License: BSD 

 + [[https://www.embarcadero.com/products/cbuilder][Embarcadero C++ Builder]] (Old Borland C++ Builder) - [Commercial]
** Windows OS only 

+ MFC - Microsft Foundation Libraries
  + Framework for developing Windows GUI Applications.

+ ATL - Active Template Library
  + Template library for developing COM components.

+ WTL - Windows Template Library

** Imaging 
 
+ [[https://www.boost.org/doc/libs/1_38_0/libs/gil/doc/index.html][Boost.Gil]] - Generic Image Library

+ [[http://easybmp.sourceforge.net/][EasyBMP]]

+ [[http://cimg.sourceforge.net/][Cimg]]

+ [[https://itk.org/][ITK]] - National Library of Medicine Insight Segmentation and
  Registration Toolkit (ITK)

+ [[http://freeimage.sourceforge.net/][FreeImage]]

+ [[https://vtk.org/][VTK]] - Visualization Toolkit - library for scientific visualization.
  + See more at: https://en.wikipedia.org/wiki/VTK

+ [[https://opencv.org/][OpenCV]] - Computer Vision Framework.

** Logging 

+ [[http://www.pantheios.org/][Pantheios]]

+ [[http://logging.apache.org/log4cxx/index.html][log4cxx]]

+ [[http://boost-log.sourceforge.net/libs/log/doc/html/index.html][Boost.Log]]

** Network and socket 
 
General Network Socket Libraries 

 + [[https://www.boost.org/doc/libs/1_69_0/doc/html/boost_asio.html][Boost Asio]] - "Boost.Asio is a cross-platform C++ library for
   network and low-level I/O programming that provides developers with
   a consistent asynchronous model using a modern C++ approach." 

 + [[https://www.boost.org/doc/libs/1_69_0/libs/beast/doc/html/index.html][Boost.Beast]] - "Beast is a C++ header-only library serving as a
   foundation for writing interoperable networking libraries by
   providing low-level HTTP/1, WebSocket, and networking protocol
   vocabulary types and algorithms using the consistent asynchronous
   model of Boost.Asio." 

 + [[http://download.dre.vanderbilt.edu/][ACE]] - Adaptive Communication Environment - "The ADAPTIVE
   Communication Environment (ACE) is a freely available, open-source
   object-oriented (OO) framework that implements many core patterns
   for concurrent communication software. ACE provides a rich set of
   reusable C++ wrapper facades and framework components that perform
   common communication software tasks across a range of OS
   platforms. The communication software tasks provided by ACE include
   event demultiplexing and event handler dispatching, signal
   handling, service initialization, interprocess communication,
   shared memory management, message routing, dynamic
   (re)configuration of distributed services, concurrent execution and
   synchronization. ACE is targeted for developers of
   high-performance and real-time communication services and
   applications. It simplifies the development of OO network
   applications and services that utilize interprocess communication,
   event demultiplexing, explicit dynamic linking, and concurrency. In
   addition, ACE automates system configuration and reconfiguration by
   dynamically linking services into applications at run-time and
   executing these services in one or more processes or threads." 

 + [[http://zeromq.org/][ZeroMQ]] - Framework fro building distributed message systems or
   message brokers.

 + [[http://www.reasoning.biz/index.htm][Reason C++ framework]] - " Reason is a cross platform framework
   designed to bring the ease of use of Java, .Net, or Python to
   developers who require the performance and strength of C++."

 + [[http://sourcey.com/libsourcey/][libsourcey]] - "LibSourcey is a collection of cross platform C++11
   modules and classes that provide developers with an arsenal for
   rapidly developing high performance network based p2p and media
   streaming applications. Think of it as the power of libuv combined
   with the features of FFmpeg, OpenCV and WebRTC, all integrated with
   the ease and readability of the stl (C++ Standard Library)."

 *Http and Clients and Servers*

 + [[https://www.genivia.com/dev.html][gSOAP]] - "Our gSOAP toolkit allows C/C++ developers to focus on
   application logic instead of infrastructure, resulting in reduced
   development time, fewer bugs, and faster time to market." 

 + [[http://www.curlpp.org/][Curlpp]] - "cURLpp is a C++ wrapper for libcURL. libcURL is described
   as: a free and easy-to-use client-side URL transfer library,
   supporting FTP, FTPS, HTTP, HTTPS, GOPHER, TELNET, DICT, FILE and
   LDAP. libcurl supports HTTPS certificates, HTTP POST, HTTP PUT, FTP
   uploading, kerberos, HTTP form based upload, proxies, cookies,
   user+password authentication, file transfer resume, http proxy
   tunneling and more! "

 + [[https://github.com/daedric/httpp][Httpp]] - "Micro http server and client written in C++"

 + [[http://siliconframework.org/][Silicon C++ Web Framework]] - "Write Fast and Robust Web APIs with C++"

 + [[https://github.com/loentar/ngrest][Ngrest]] - "Fast and easy C++ RESTful WebServices framework"


 *Low level socket manipulation and raw socket*

 + [[https://libtins.github.io/][Libtins]] - "libtins is a high-level, multiplatform C++ network
   packet sniffing and crafting library. Its main purpose is to
   provide the C++ developer an easy, efficient, platform and
   endianness-independent way to create tools which need to send,
   receive and manipulate network packets."

 + [[http://seladb.github.io/PcapPlusPlus-Doc/][PcapPlusPlus]] - "PcapPlusPlus is a multiplatform C++ network
   sniffing and packet parsing and crafting framework. It's meant to
   be lightweight, efficient and easy to use."

 *RPC - Remote Procedure Calls*

 + [[https://zeroc.com/products/ice][ICE]] - "Ice is a comprehensive RPC framework with support for C++,
   C#, Java, JavaScript, Python, and more."
   + License: GPLv2 for open source projects, any commercial project
     requires buying a proper [[https://zeroc.com/licensing][license]].
 
** Testing 

Unit Testing: 

 + [[http://googletest.googlecode.com/][Google Test]]

 + [[http://www.boost.org/doc/libs/1_38_0/libs/test/doc/html/index.html][Boost.Test]]

 + [[http://unittest-cpp.sourceforge.net/][UnitTest++]]

 + [[https://github.com/onqtam/doctest][Doctest]] 

Mock: 

 + [[https://app.assembla.com/wiki/show/hippomocks][Hippo Mocks]]

 + [[http://turtle.sourceforge.net/][Boost Turtle]] -  A C++ mock object library for Boost.

 + [[https://github.com/google/googlemock][GoogleMock]] (Deprecated -> Absorbed into Google Test)

** Database 
 
+ [[http://lmdbxx.sourceforge.net/][LMDB++]]

+ [[http://otl.sourceforge.net/][OTL]]

+ [[http://soci.sourceforge.net/][SOCI]]

** Graphics and Game Engines 

+ [[https://www.ogre3d.org/][Ogre3D]] - Object-Oriented Graphics Rendering Engine
  + API Docs: https://ogrecave.github.io/ogre/api/latest/

+ [[http://www.libsdl.org/][SDL]] - "Simple DirectMedia Layer is a cross-platform development
  library designed to provide low level access to audio, keyboard,
  mouse, joystick, and graphics hardware via OpenGL and Direct3D. It
  is used by video playback software, emulators, and popular games
  including Valve's award winning catalog and many Humble Bundle
  games."

+ [[https://sourceforge.net/projects/alleg/][Allegro]] - "Allegro is a cross-platform library intended for use in
  computer games and other types of multimedia programming."

+ [[https://www.sfml-dev.org/][SFML]] - "SFML provides a simple interface to the various components
  of your PC, to ease the development of games and multimedia
  applications. It is composed of five modules: system, window,
  graphics, audio and network."

+ [[https://magnum.graphics/][Magnum Engine]] - "Lightweight and modular C++11/C++14 graphics
  middleware for games and data visualization." 

+ [[https://libcinder.org/about][Cinder]] - "Cinder is a C++ library for programming with aesthetic
  intent - the sort of development often called creative coding. This
  includes domains like graphics, audio, video, and computational
  geometry. Cinder is cross-platform, with official support for
  macOS, Windows, Linux, iOS, and Windows UWP." 

+ [[https://openframeworks.cc/][Openframeworks]] - "openFrameworks is an open source C++ toolkit for
  creative coding."

+ [[https://github.com/ocornut/imgui][Imgui]] - GUI Library for games

+ [[https://bkaradzic.github.io/bgfx/index.html][Bgfx]] - Cross-platform, graphics API agnostic, “Bring Your Own
  Engine/Framework” style rendering library, licensed under
  permissive BSD-2 clause open source license.

+ [[http://glew.sourceforge.net/][Glew]] - The OpenGL Extension Wrangler Library - " The OpenGL
  Extension Wrangler Library (GLEW) is a cross-platform open-source
  C/C++ extension loading library. GLEW provides efficient run-time
  mechanisms for determining which OpenGL extensions are supported on
  the target platform. OpenGL core and extension functionality is
  exposed in a single header file. GLEW has been tested on a variety
  of operating systems, including Windows, Linux, Mac OS X, FreeBSD,
  Irix, and Solaris."

+ [[http://www.openscenegraph.org/][OpenSceneGraph]] - "The OpenSceneGraph is an open source high
  performance 3D graphics toolkit, used by application developers in
  fields such as visual simulation, games, virtual reality,
  scientific visualization and modelling. Written entirely in
  Standard C++ and OpenGL it runs on all Windows platforms, OSX,
  GNU/Linux, IRIX, Solaris, HP-Ux, AIX and FreeBSD operating
  systems. The OpenSceneGraph is now well established as the world
  leading scene graph technology, used widely in the vis-sim, space,
  scientific, oil-gas, games and virtual reality industries." 

+ [[https://glm.g-truc.net/0.9.9/index.html][OpenGL Mathematics]] - "OpenGL Mathematics (GLM) is a header only C++
  mathematics library for graphics software based on the OpenGL
  Shading Language (GLSL) specifications."

+ [[https://vis.uni-koeln.de/visionaray.html][Visionary]] - Visionaray - A C++ ray tracing template library
  + https://github.com/szellmann/visionaray
** Dependency Injection

+ [[http://wallaroolib.sourceforge.net/][Wallaroo]] - "Wallaroo is a dependency injection library for C++
  released under the BOOST software license. With wallaroo, you can
  easily separate the object graph from the class implementation. You
  can create objects and wire them using strings so that you can load
  the "object graph" from a configuration file."

+ [[https://github.com/ybainier/Hypodermic][Hypodermic]] - "Hypodermic is an IoC container for C++. It provides
  dependency injection to your existing design. Hypodermic is a
  non-intrusive header only IoC container for C++. It provides
  dependency injection to your existing design by managing the
  creation of your components and their dependencies in the right
  order, sparing you the trouble of writing and maintaining boiler
  plate code."   
** Crypto 

+ [[https://www.cryptopp.com/][Crypto++]] - (Cryptopp) "Crypto++ Library is a free C++ class library
  of cryptographic schemes."

+ [[https://www.gnutls.org/][GNU TLS]] - The GnuTLS Transport Layer Security Library

+ [[https://www.openssl.org/][OpenSSL]] - "OpenSSL is a robust, commercial-grade, and full-featured
  toolkit for the Transport Layer Security (TLS) and Secure Sockets
  Layer (SSL) protocols. It is also a general-purpose cryptography
  library." 

+ [[https://www.libtom.net/][Libtom]] - "LibTomCrypt is a fairly comprehensive, modular and
  portable cryptographic toolkit that provides developers with a vast
  array of well known published block ciphers, one-way hash
  functions, chaining modes, pseudo-random number generators, public
  key cryptography and a plethora of other routines."
  + https://github.com/libtom/libtomcrypt

+ [[https://botan.randombit.net/][Botan]] - "Botan’s goal is to be the best option for cryptography in
  C++ by offering the tools necessary to implement a range of
  practical systems, such as TLS protocol, X.509 certificates, modern
  AEAD ciphers, PKCS#11 and TPM hardware support, password hashing,
  and post quantum crypto schemes."

** Embedded Systems 
 
 *General* 

+ [[https://www.etlcpp.com/][ETLCPP]] - Embedded Template Library 

 
 *Open Source RTOS - Real Time Operating Systems*

+ [[http://sourceforge.net/projects/qpc/files/QP_C%252B%252B/4.5.04/][QP/C++]] -  RTOS kernel - License: dual GPL

+ [[http://distortos.org/][distortos]] - object-oriented C++ RTOS for microcontrollers

+ [[https://www.freertos.org/][FreeRTOS Kernel]] / RTOS 

+ [[https://www.rtems.org/][RTEMS]] / RTOS - Real-Time Executive for Multiprocessor Systems 
  + "The Real-Time Executive for Multiprocessor Systems or RTEMS is an
    open source Real Time Operating System (RTOS) that supports open
    standard application programming interfaces (API) such as
    POSIX. It is used in space flight, medical, networking and many
    more embedded devices using processor architectures including ARM,
    PowerPC, Intel, Blackfin, MIPS, Microblaze and more. Commercial
    support is available from US and European companies, and free
    support comes via the active global community."
  + Comes from: Aerospace Industry 
  + See:
    + [[https://blog.qt.io/blog/2018/05/03/qt-microncontrollers-mcu/][Qt on Microcontrollers (MCU)]]

+ [[http://ecos.sourceware.org/][eCOS]] / RTOS - Open Source Real Time Operating System
  + "eCos is a free open source real-time operating system intended
    for embedded applications. The highly configurable nature of
    eCos allows the operating system to be customised to precise
    application requirements, delivering the best possible run-time
    performance and an optimised hardware resource footprint. A
    thriving net community has grown up around the operating system
    ensuring on-going technical innovation and wide platform
    support."
  + Comes from: Automotive Industry 


 *Modbus Protocol* 

 + [[https://libmodbus.org/][libmodbus]] - "A Modbus library for Linux, Mac OS X, FreeBSD, QNX and Win32"

 + [[https://sourceforge.net/projects/qmodmaster/][QModMaster]] -  Modbus TCP,RTU Master Software - "QModMaster is a
   free Qt-based implementation of a ModBus master application. A
   graphical user interface allows easy communication with ModBus RTU
   and TCP slaves. QModMaster also includes a bus monitor for
   examining all traffic on the bus."

 + [[https://github.com/fanzhe98/modbuspp][modbuspp]] - A C++ Library for Modbus TCP Protocol


 *HMI and SCADA* 

 + [[https://community.kde.org/Incubator/Projects/CuteHMI][CuteHMI]]  
   + "CuteHMI is meant to be a set of software components (libraries
     and executables) targeted at building *HMI* ( *Human Machine*
     *Interface*) applications. These components aim to fill the gap,
     between open-source editions of Qt and commercial software
     targeted at physical computing (*HMI / SCADA / IoT / BMS / RMS /
     etc*) build around it, thus providing complete open-source suite
     for such types of applications for home and industrial
     use. Example use case is to create user interface that can be
     used to communicate with PLC (programmable logic controller) to
     turn on air conditioning in the building for example."
   + Web Site:
     + https://cutehmi.kde.org/
   + Repository:
     + https://invent.kde.org/kde/cutehmi
   + Github Mirror:
     + https://github.com/michpolicht/CuteHMI

 + [[https://github.com/IndeemaSoftware/QSimpleScada][QSimpleScada]]
   + "Qt/C++ based simple SCADA framework, with dashboard, static and
     dynamic components. By using QSimpleScada framework you can build
     complex SCADA uis for your needs." 
     
