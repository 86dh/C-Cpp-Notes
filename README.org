#+INCLUDE: theme/style.org 
#+TITLE: CPP / C++ Notes 
#+DESCRIPTION: cpp/c++ code examples and demonstrations.
#+STARTUP: content 

* C++ - CPP 
** Pages in this document 

 + [[file:Understanding-CPP.org][Understanding C++]] - Exploration of C++ basic concepts and also
   modern C++ features.

 + [[file:CPP-template-metaprogramming.org][Template Metaprogramming]] - also known as generic programming.

 + [[file:cpp-reference-card.org][C++ and STL reference card]] - Concise reference of C++ standard
   template library showing main methods, collections (aka
   containters) and type signatures.

 + [[file:cpp-design-patterns.org][Design Patterns]] - Object Oriented Design Patterns + Generic
   Programming Design Patterns + Functional Programming. 

 + [[file:Root-cern-repl.org][CERN's Root C++ REPL and CLING]] - Notes about the CERN's interactive
   interpereter based on Clang/LLVM for C++ where the user can type
   and evaluate C++ code, load libraries like shared libraries, boost
   libraries and and also test C++ with immediate feedback. ROOT is
   invaluable tool for learn, practicing C++ and create demonstrations.

 + [[file:sample-modern-cpp-programs.org][Sample Modern C++ Programs]]

 + [[file:bookmarks.org][C++ Selected Bookmarks and Conference Videos]]

 *This Repository* 
 
 + https://github.com/caiorss/C-Cpp-Notes

 *This Site*

 + https://caiorss.github.io/C-Cpp-Notes/

** C++ Checklist

- [ ] - Create C++ shared library 
- [ ] - Create a C-interface and FFI-interface for a C++ shared
  library.
  - [ ] - Example - Haskell FFI.
  - [ ] - Example - Python FFI.
  - [ ] - Example - F# (.NET) FFI.
- [ ] - Some graphical programming with QT.
- [ ] - Interface low level Unix/Linux OS services.
- [ ] - Standard STL library
- [ ] - Vectors and numerical computing with STL.

