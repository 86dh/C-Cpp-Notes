#+INCLUDE: theme/style.org 
#+TITLE: CPP/C++ Math and Numerical Computing 
#+DESCRIPTION: cpp/c++ stl math numerical methods apis random 
#+STARTUP: content 

 - [[wiki:index][Index]]

* Math and Numerical Computing 
** Numerical Libraries and Headers

All numeric libraries: 
 + https://en.cppreference.com/w/cpp/numeric

Headers: 

 + [[https://en.cppreference.com/w/cpp/header/cmath][<cmath>]] - C++ version of the C-header <math.h>. Contains basic
   trasncedental functions, sin, cos, tan and so on.
   + C++11 Float point classification functions:
     + [[https://en.cppreference.com/w/cpp/numeric/math/isnan][std::isnan]]
     + [[https://en.cppreference.com/w/cpp/numeric/math/isfinite][std::isfinite]]
   + Widely used trasncedental functions: (C++11)
     + [[https://en.cppreference.com/w/cpp/numeric/math/erf][std::erf]] - Error functions, can be used for computing normal
       function.
     + [[https://en.cppreference.com/w/cpp/numeric/math/erfc][std::erfc]] - Complementary error function.
     + [[https://en.cppreference.com/w/cpp/numeric/math/tgamma][std::tgamma]] - Gamma function. 
   + Special math functions: (C++17)
     + [[https://en.cppreference.com/w/cpp/numeric/special_math/assoc_laguerre][std::assoc_laguerre]] - Associated Laguerre polynomials of the
       degree n, order m, and argument x.
     + [[https://en.cppreference.com/w/cpp/numeric/special_math/beta][std::beta]]
     + [[https://en.cppreference.com/w/cpp/numeric/special_math/expint][std::expint]] - Exponential integral.

 + [[https://en.cppreference.com/w/cpp/header/complex][<complex>]] - Complex number library.

 + [[https://en.cppreference.com/w/cpp/header/random][<random>]] - High quality C++11 random generator library. Provides
   lots of distributions and random number engines.

 + [[https://en.cppreference.com/w/cpp/header/limits][<limits>]] - Provides numeric limits of all C++ numeric types. For
   instance, minimum value, maximum value, number of digits, precision
   and episilon values of a given numeric type.

 + [[https://en.cppreference.com/w/cpp/header/ratio][<ratio>]] - Compile-time rational arithmetic library.

 + [[http://www.cplusplus.com/reference/numeric/][<numeric>]] - Numerical "algorithms" or numerical functions for
   processing containers. std::accumulate, std::iner_product,
   std::partial_sum and std::iota.

** Numerical Constants

Notes: Those constants are defined at the header <cmath>

#+CAPTION: C++ Numerical constants in header <cmath>
|-----------------------------+-----------+-------------------------------------------------------------------------------|
| Constant                    |     Value | Description                                                                   |
|-----------------------------+-----------+-------------------------------------------------------------------------------|
| *IEE754 Float Point Contants* |           |                                                                               |
| NAN                         |         - | (Since C++11) Constant not a number, used to indicate an invalid float point. |
| INFINITY                    |         - | (Since C++11) Positive infinity.                                              |
| -INFINITY                   |         - | (Since C++11) Negative infinity.                                              |
|                             |           |                                                                               |
| *General Math Constants*      |           |                                                                               |
| ~M_E~                         | 2.7182818 | Euler's number or exp(1)                                                      |
| ~M_LN2~                       | 0.6931472 | Natural logarithm of 2 or log(2)                                              |
| ~M_LN10~                      | 2.3025851 | Natural logarithm of 10 or log(10)                                            |
|                             |           |                                                                               |
| ~M_LOG10E~                    | 0.4342945 | Log of E (Euler's number) at base 10                                          |
| ~M_LOG2E~                     | 1.4426950 | Log of E (Euler's number) at base 2                                           |
|                             |           |                                                                               |
| ~M_SQRT2~                     | 1.4142136 | Square root of 2 or sqrt(2)                                                   |
| ~M_SQRT1_2~                   | 0.7071068 | Square root of 1/2 or sqrt(1/2) or 1/sqrt(2)                                  |
|                             |           |                                                                               |
| ~M_PI~                        | 3.1415927 | PI number                                                                     |
| ~M_PI_2~                      | 1.5707963 | PI/2                                                                          |
| ~M_PI_4~                      | 0.7853982 | PI/3                                                                          |
| ~M_1_PI~                      | 0.3183099 | 1/PI                                                                          |
| ~M_2_PI~                      | 0.6366197 | 2/PI                                                                          |
| ~M_2_SQRTPI~                  | 1.1283792 | 2/sqrt(PI)                                                                    |
|                             |           |                                                                               |
|-----------------------------+-----------+-------------------------------------------------------------------------------|

Example in CERN's Root REPL:

#+BEGIN_SRC cpp 
  >> M_PI
  (double) 3.1415927

  >> sin(M_PI)
  (double) 1.2246468e-16

  >> cos(M_PI)
  (double) -1.0000000

  >> cos(M_PI_2)
  (double) 6.1232340e-17

  >> sin(M_PI_2)
  (double) 1.0000000
  >> 
#+END_SRC

See: 

 + P0631R2 Math Constants - Document P0631R2 - *Math Constants* -
   <http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2018/p0631r2.pdf>
 + [[https://en.cppreference.com/w/cpp/numeric/math/INFINITY][INFINITY - cppreference.com]]
 + [[https://en.cppreference.com/w/cpp/numeric/math/NAN][NAN -   cppreference.com]]
